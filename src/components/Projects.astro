---
const images = [
  "/assets/images/sloghouse.jpeg",
  "/assets/images/sloghouse-1.jpeg",
  "/assets/images/sloghouse-2.jpeg",
];
---

<section
  class="w-screen h-screen overflow-hidden flex flex-col justify-start items-center relative"
>
  <h1 class="text-6xl font-bold text-white">Slog House</h1>
  <div id="carousel" class="relative flex">
    {
      images.map((image) => (
        <div class="absolute w-[60vw] h-[50vw] top-[20vw] md:top-0 md:w-[70vw] md:h-[40vw] overflow-hidden rounded-3xl image-container">
          <img
            src={image}
            alt="Slog House"
            class="w-full h-full object-cover"
          />
        </div>
      ))
    }
  </div>

  <div
    class="flex items-center justify-between text-white absolute bottom-2 w-full"
  >
    <button id="hmm">left</button>
    <button id="ahhh">right</button>
  </div>
</section>

<script>
  import { animate } from "motion";
  const images = [
    "/assets/images/sloghouse.jpeg",
    "/assets/images/sloghouse-1.jpeg",
    "/assets/images/sloghouse-2.jpeg",
  ];
  let position = 0;

  // loop left and right
  function handleLeftSwipe() {
    position = position === 0 ? images.length - 1 : position - 1;
    updatePosition();
  }

  function handleRightSwipe() {
    position = position === images.length - 1 ? 0 : position + 1;
    updatePosition();
  }

  function updatePosition() {
    const containers = document.querySelectorAll(
      ".image-container"
    ) as unknown as HTMLElement[];
    containers.forEach((container, index) => {
      animate(
        container,
        {
          left: `${(index - position) * 60 - 40}vw`,
          scale: [position === index ? 0 : 1, index === position ? 1 : 0.6],
        },
        {
          duration: 1,
        }
      );
    });
  }

  document.getElementById("hmm")?.addEventListener("click", handleLeftSwipe);
  document.getElementById("ahhh")?.addEventListener("click", handleRightSwipe);

  document.addEventListener("DOMContentLoaded", () => {
    const carousel = document.getElementById("carousel");
    if (carousel) {
      animate(
        carousel,
        {
          opacity: [0, 0.5, 1],
        },
        {
          duration: 1.1,
          delay: 0.5,
        }
      );
    }

    updatePosition();
  });
</script>
